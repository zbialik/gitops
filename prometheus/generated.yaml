apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.zb/name: prometheus
  name: prometheus
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.zb/name: prometheus
  name: prometheus
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.zb/name: prometheus
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.zb/name: prometheus
  name: prometheus
  namespace: monitoring
spec:
  ports:
  - name: web
    port: 9090
    protocol: TCP
    targetPort: web
  selector:
    app.zb/name: prometheus
    prometheus: main
  type: ClusterIP
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app.zb/name: prometheus
  name: main
  namespace: monitoring
spec:
  enableAdminAPI: false
  externalLabels:
    cluster: homelab
    prom_shard: $(SHARD)
  nodeSelector:
    nodegroup.zb/persistent-data: "true"
  podMetadata:
    labels:
      app.zb/name: prometheus
      prometheus: main
  replicas: 1
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 2Gi
  securityContext:
    fsGroup: 65534
    runAsGroup: 65534
    runAsUser: 65534
  serviceAccountName: prometheus
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  shards: 1
  storage:
    volumeClaimTemplate:
      spec:
        resources:
          requests:
            storage: 100Gi
  version: v2.48.1
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.zb/name: prometheus
  name: prometheus
  namespace: monitoring
spec:
  endpoints:
  - port: web
  selector:
    matchLabels:
      operated-prometheus: "true"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: cert-manager-webhook-duckdns-production
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  labels:
    app.zb/name: prometheus
  name: prometheus
  namespace: monitoring
spec:
  ingressClassName: nginx
  rules:
  - host: prometheus.zeb17-int.duckdns.org
    http:
      paths:
      - backend:
          service:
            name: prometheus
            port:
              number: 9090
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - prometheus.zeb17-int.duckdns.org
    secretName: prometheus-cert
